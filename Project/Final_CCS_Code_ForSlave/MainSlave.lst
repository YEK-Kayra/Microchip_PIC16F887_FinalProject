CCS PCM C Compiler, Version 5.049, 5967               22-Ara-24 20:17

               Filename:   C:\Users\yunus\OneDrive\Masaüstü\Microchip_PIC16F887_FinalProject\Project\Final_CCS_Code_ForSlave\MainSlave.lst

               ROM used:   93 words (1%)
                           Largest free fragment is 2048
               RAM used:   7 (2%) at main() level
                           7 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   01B
0003:  NOP
.................... #include <16f887.h>   
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
....................  
.................... #list 
....................  
....................  
....................  
.................... #use delay(clock=4M) 
0004:  MOVLW  21
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  BCF    0A.3
0019:  BCF    0A.4
001A:  GOTO   05B (RETURN)
.................... #use fast_io(ALL)   
.................... #use rs232(baud=9600, parity=N, uart1, bits=8)  
....................  
....................  
.................... #fuses HS,NOWDT,NOPUT,NOLVP,NOCPD,NOPROTECT,NODEBUG,NOBROWNOUT,NOWRT 
....................  
....................  
.................... #define selcukID_button pin_D0 
.................... #define emreID_button   pin_D1 
.................... #define idleID_button   pin_D2 
....................  
.................... char related_ID; 
....................  
....................  
.................... void main(void)  
001B:  MOVF   03,W
001C:  ANDLW  1F
001D:  MOVWF  03
001E:  BSF    03.5
001F:  BSF    03.6
0020:  BCF    07.3
0021:  MOVLW  19
0022:  BCF    03.6
0023:  MOVWF  19
0024:  MOVLW  A6
0025:  MOVWF  18
0026:  MOVLW  90
0027:  BCF    03.5
0028:  MOVWF  18
0029:  BSF    03.5
002A:  BSF    03.6
002B:  MOVF   09,W
002C:  ANDLW  C0
002D:  MOVWF  09
002E:  BCF    03.6
002F:  BCF    1F.4
0030:  BCF    1F.5
0031:  MOVLW  00
0032:  BSF    03.6
0033:  MOVWF  08
0034:  BCF    03.5
0035:  CLRF   07
0036:  CLRF   08
0037:  CLRF   09
0038:  BCF    03.7
.................... { 
....................  
....................    set_tris_d(0x07); //D0, D1, D2 ports will be input pin 
0039:  MOVLW  07
003A:  BSF    03.5
003B:  BCF    03.6
003C:  MOVWF  08
....................     
....................     while(1) 
....................     { 
....................        
....................          
....................       if(input(selcukID_button) == 1){ 
003D:  BCF    03.5
003E:  BTFSS  08.0
003F:  GOTO   047
....................       related_ID = '+';  
0040:  MOVLW  2B
0041:  MOVWF  20
....................       putc(related_ID); 
0042:  MOVF   20,W
0043:  BTFSS  0C.4
0044:  GOTO   043
0045:  MOVWF  19
....................       } 
0046:  GOTO   058
....................        
....................       else if(input(emreID_button) == 1){ 
0047:  BTFSS  08.1
0048:  GOTO   050
....................        related_ID = '*'; 
0049:  MOVLW  2A
004A:  MOVWF  20
....................        putc(related_ID); 
004B:  MOVF   20,W
004C:  BTFSS  0C.4
004D:  GOTO   04C
004E:  MOVWF  19
....................       } 
004F:  GOTO   058
....................        
....................       else if(input(idleID_button) == 1){ 
0050:  BTFSS  08.2
0051:  GOTO   058
....................       related_ID = '.';  
0052:  MOVLW  2E
0053:  MOVWF  20
....................       putc(related_ID); 
0054:  MOVF   20,W
0055:  BTFSS  0C.4
0056:  GOTO   055
0057:  MOVWF  19
....................       } 
....................        
....................         
....................        
....................       delay_ms(50); //50ms bekle. 
0058:  MOVLW  32
0059:  MOVWF  21
005A:  GOTO   004
005B:  GOTO   03E
....................       
....................  
....................     } 
....................   
....................   
.................... } 
005C:  SLEEP

Configuration Fuses:
   Word  1: 2CF2   HS NOWDT NOPUT MCLR NOPROTECT NOCPD NOBROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 0700   BORV40 NOWRT
